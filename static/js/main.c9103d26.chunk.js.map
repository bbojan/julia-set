{"version":3,"sources":["worker/server/worker.server.ts","webpack:///./src/worker/server/worker.server.ts?2088","hooks/useCanvas.ts","hooks/useCircle.ts","hooks/useMouseMove.ts","views/paint.ts","hooks/useTime.ts","views/CanvasCircle.tsx","views/usePaintCircle.ts","shared/julia.calc.ts","views/CanvasMain.tsx","views/usePaintOnMain.ts","worker/server/index.ts","hooks/useWorker.ts","worker/worker.client.ts","views/CanvasWorker.tsx","views/usePaintOnWorker.ts","views/Clock.tsx","views/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["inst","wrap","Worker","module","exports","f","this","useCanvas","canvasRef","useRef","ctxRef","useEffect","current","getContext","useCircle","hitTest","xRef","yRef","capturedRef","canvas","onmousedown","ev","x","y","ex","offsetX","ey","offsetY","window","onmousemove","pageX","pageY","onmouseup","useMouseMove","Math","sqrt","radius","K_Resolution","paintCircle","ctx","circle","beginPath","arc","PI","fillStyle","fill","useRequestAnimationFrame","animate","requestRef","previousTimeRef","callback","time","a","undefined","deltaTime","requestAnimationFrame","cancelAnimationFrame","formatedTime","d","Date","getHours","getMinutes","getSeconds","getMilliseconds","CanvasCircle","memo","props","factor","delta","w","width","h","height","clearRect","Promise","resolve","usePaintCircle","ref","style","position","top","left","bottom","jCalculateArray","options","creal","cimag","floor","h4","w4","array","Uint8ClampedArray","pallete","pallette","color","jCreateColors","j","cx","cy","i","xt","colors","glur","jAnimate","frame","sin","cos","CanvasMain","factorRef","resolution","params","values","img","ImageData","putImageData","document","title","toFixed","usePaintOnMain","WorkerServer","useWorker","workerRef","worker","timeout","wrkr","setTimeout","then","terminate","CanvasWorker","isCalculatingRef","arrayRef","calculate","usePaintOnWorker","Clock","useState","count","setCount","c","id","setInterval","clearInterval","className","View","list","useMemo","Array","from","keys","code","setCode","setFactor","option","setOption","text","setText","fetch","r","t","margin","type","value","name","checked","onChange","overflowY","map","v","e","target","dangerouslySetInnerHTML","__html","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9103d26.chunk.js","sourcesContent":["var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/home/kjovanovski/projects/julia-set/node_modules/comlink-loader/dist/comlink-worker-loader.js!/home/kjovanovski/projects/julia-set/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/home/kjovanovski/projects/julia-set/src/worker/server/worker.server.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"87e9538bbd5cba1b058c.worker.js\");\n};","import { useEffect, useRef } from \"react\";\n\nexport function useCanvas() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const ctxRef = useRef<CanvasRenderingContext2D | null>(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      ctxRef.current = canvasRef.current.getContext(\"2d\");\n    }\n  }, []);\n\n  return { canvasRef, ctxRef };\n}\n","import { MutableRefObject } from \"react\";\nimport { useMouseMove } from \"./useMouseMove\";\n\nexport interface ICircle {\n  xRef: MutableRefObject<number>;\n  yRef: MutableRefObject<number>;\n  radius: number;\n}\n\nexport function useCircle(\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>\n): ICircle {\n  const radius = 40;\n\n  const { xRef, yRef } = useMouseMove(canvasRef, ({ x, y, ex, ey }) => {\n    const distance = Math.sqrt((x - ex) * (x - ex) + (y - ey) * (y - ey));\n    return distance < radius;\n  });\n\n  return { xRef, yRef, radius };\n}\n","import { MutableRefObject, useEffect, useRef } from \"react\";\n\nexport function useMouseMove(\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\n  hitTest: (points: { x: number; y: number; ex: number; ey: number }) => boolean\n) {\n  const xRef = useRef(50);\n  const yRef = useRef(50);\n\n  const capturedRef = useRef(false);\n\n  useEffect(() => {\n    const onmousedown = (ev: MouseEvent) => {\n      const x = xRef.current;\n      const y = yRef.current;\n      const ex = ev.offsetX || 0;\n      const ey = ev.offsetY || 0;\n\n      const hit = hitTest({ x, y, ex, ey });\n\n      if (hit) {\n        capturedRef.current = true;\n      }\n    };\n    const onmousemove = (ev: MouseEvent) => {\n      if (capturedRef.current) {\n        xRef.current = ev.pageX;\n        yRef.current = ev.pageY;\n      }\n    };\n    const onmouseup = (ev: MouseEvent) => {\n      capturedRef.current = false;\n    };\n\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.onmousedown = onmousedown;\n      window.onmousemove = onmousemove;\n      window.onmouseup = onmouseup;\n    }\n\n    return () => {\n      if (canvas) {\n        canvas.onmousedown = null;\n        window.onmousemove = null;\n        window.onmouseup = null;\n      }\n    };\n  }, []);\n\n  return { xRef, yRef };\n}\n","import { ICircle } from \"../hooks/useCircle\";\nimport { IJuliaResolution } from \"../shared/julia.types\";\n\nexport const K_Resolution = 800;\n\nexport function paint(\n  ctx: CanvasRenderingContext2D,\n  resolution: IJuliaResolution,\n  values: Uint8ClampedArray,\n  pallette: string[]\n) {\n  const { height, width, factor } = resolution;\n\n  const f = Math.floor(factor || 1);\n  const w = width / f;\n  const h = height / f;\n\n  for (let y = 0; y < h; y++) {\n    for (let x = 0; x < w; x++) {\n      const i = y * h + x;\n      const index = values[i] || 0;\n      const color = pallette[index];\n\n      ctx.beginPath();\n      ctx.rect(x * f, y * f, f, f);\n      ctx.fillStyle = color;\n      ctx.fill();\n    }\n  }\n}\n\nexport function paintCircle(ctx: CanvasRenderingContext2D, circle: ICircle) {\n  const { xRef, yRef, radius } = circle;\n  const x = xRef.current;\n  const y = yRef.current;\n\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\n  ctx.fillStyle = \"yellow\";\n  ctx.fill();\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const delayed = (timeout: number) =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(timeout);\n    }, timeout);\n  });\n\nexport function useInterval(timeout: number, callback: () => void) {\n  useEffect(() => {\n    const id = setInterval(callback, timeout);\n    return () => {\n      clearInterval(id);\n    };\n  }, []);\n}\n\nexport function useRequestAnimationFrame(\n  animate: (deltaTime: number, time: number) => Promise<unknown>\n) {\n  const requestRef = useRef<number>(0);\n  const previousTimeRef = useRef<number>(0);\n\n  useEffect(() => {\n    const callback: FrameRequestCallback = async (time) => {\n      if (previousTimeRef.current !== undefined) {\n        const deltaTime = time - previousTimeRef.current;\n        await animate(deltaTime, time);\n      }\n      previousTimeRef.current = time;\n      requestRef.current = requestAnimationFrame(callback);\n    };\n\n    requestRef.current = requestAnimationFrame(callback);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n}\n\nexport function formatedTime() {\n  const d = new Date();\n  const time = `${d.getHours()}:${d.getMinutes()} | ${d.getSeconds()},${d.getMilliseconds()}`;\n  return time;\n}\n","import { FC, memo } from \"react\";\nimport { useCanvas } from \"../hooks/useCanvas\";\nimport { useCircle } from \"../hooks/useCircle\";\nimport { K_Resolution } from \"./paint\";\nimport { usePaintCircle } from \"./usePaintCircle\";\n\nexport const CanvasCircle: FC<{}> = memo((props) => {\n  const { canvasRef, ctxRef } = useCanvas();\n  const circle = useCircle(canvasRef);\n\n  usePaintCircle(canvasRef, ctxRef, circle, 1);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={K_Resolution}\n      height={K_Resolution}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n      }}\n    ></canvas>\n  );\n});\n","import { MutableRefObject, useRef } from \"react\";\nimport { ICircle } from \"../hooks/useCircle\";\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\nimport { paintCircle } from \"./paint\";\n\nexport function usePaintCircle(\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\n  circle: ICircle,\n  factor?: number\n) {\n  const factorRef = useRef(factor || 1);\n  factorRef.current = factor || 1;\n\n  useRequestAnimationFrame(async (delta) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = ctxRef.current;\n    if (!ctx) return;\n\n    // alpha\n    const w = canvasRef.current?.width || 1;\n    const h = canvasRef.current?.height || 1;\n    ctx.clearRect(0, 0, w, h);\n    // alpha\n\n    paintCircle(ctx, circle);\n\n    return Promise.resolve();\n  });\n}\n","import glur from \"glur\";\nimport { IJuliaOptions, IJuliaParams } from \"./julia.types\";\n\nexport function jCalculateArray(options: IJuliaOptions) {\n  const { height, width, creal, cimag, factor } = options;\n  const f = Math.floor(factor || 1);\n  const w = width / f;\n  const h = height / f;\n\n  const h4 = w / 4;\n  const w4 = h / 4;\n\n  let array = new Uint8ClampedArray(w * h * 4);\n  const pallete = jCreateColors();\n\n  let j = 0;\n\n  for (let y = 0; y < h; y++) {\n    for (let x = 0; x < w; x++) {\n      let cx = -2 + x / w4;\n      let cy = -2 + y / h4;\n      let i = 0;\n\n      do {\n        const xt = cx * cx - cy * cy + creal;\n        cy = 2 * cx * cy + cimag;\n        cx = xt;\n        i++;\n      } while (cx * cx + cy * cy < 4 && i < 25);\n\n      const colors = pallete[i];\n      array[j + 0] = colors[0];\n      array[j + 1] = colors[1];\n      array[j + 2] = colors[2];\n      array[j + 3] = colors[3];\n\n      j += 4;\n    }\n  }\n\n  glur(array, w, h, 8);\n\n  return array;\n}\n\nexport function jAnimate(frame: number): IJuliaParams {\n  const creal = -0.8 + 0.6 * Math.sin(frame / (3.14 * 20));\n  const cimag = 0.156 + 0.4 * Math.cos(frame / (3.14 * 40));\n  return { creal, cimag };\n}\n\nexport function jCreateColors() {\n  const pallette: number[][] = [];\n\n  for (\n    let x = 0;\n    x < 9;\n    x++ // this loop populates the color pallette array\n  ) {\n    let color = 31 * x; // convert the number to hex\n    pallette[x] = [color, color, 255, 255]; // \"#\" + color + color + \"ff\"; // colors 0-8: the Red and Green components change, Blue=FF\n    pallette[x + 8] = [0, 255, color, 255]; // \"#00ff\" + color; // colors 8-16: the Blue component changes, Red and Green=FF\n    pallette[17 + x] = [color, 0, 0, 255]; //  \"#\" + color + \"0000\"; // colors 17-25: the Red component changes, Green and Blue=0\n  }\n\n  return pallette;\n}\n","import { FC, memo } from \"react\";\nimport { useCanvas } from \"../hooks/useCanvas\";\nimport { K_Resolution } from \"./paint\";\nimport { usePaintOnMain } from \"./usePaintOnMain\";\n\nexport const CanvasMain: FC<{ factor: number }> = memo((props) => {\n  const { canvasRef, ctxRef } = useCanvas();\n  usePaintOnMain(canvasRef, ctxRef, props.factor);\n\n  return (\n    <canvas ref={canvasRef} width={K_Resolution} height={K_Resolution}></canvas>\n  );\n});\n","import { MutableRefObject, useRef } from \"react\";\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\nimport { jAnimate, jCalculateArray } from \"../shared/julia.calc\";\nimport { IJuliaOptions, IJuliaResolution } from \"../shared/julia.types\";\n\nexport function usePaintOnMain(\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\n  factor?: number\n) {\n  const frame = useRef(0);\n  const factorRef = useRef(factor || 1);\n  factorRef.current = factor || 1;\n\n  //const sab = new ArrayBuffer(w * h * 4);\n  // const sabView = new Uint8ClampedArray(sab);\n\n  useRequestAnimationFrame(async (delta) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = ctxRef.current;\n    if (!ctx) return;\n\n    const resolution: IJuliaResolution = {\n      width: canvas?.width || 960,\n      height: canvas?.height || 540,\n      factor: factorRef.current,\n    };\n\n    frame.current = frame.current + 1;\n    const params = jAnimate(frame.current);\n\n    const options: IJuliaOptions = { ...resolution, ...params };\n    const values = jCalculateArray(options);\n\n    const img = new ImageData(values, resolution.width, resolution.height);\n    ctx.putImageData(img, 0, 0);\n\n    document.title = `${(1000 / delta).toFixed(2)} FPS`;\n\n    return Promise.resolve();\n  });\n}\n","// eslint-disable-next-line\nimport WorkerServer from \"comlink-loader!./worker.server\"; // inline loader\nexport default WorkerServer;\n","import { useEffect, useRef } from \"react\";\nimport { createWorkerClient } from \"../worker/worker.client\";\nimport { IWorkerClient } from \"../worker/worker.types\";\nimport { delayed } from \"./useTime\";\n\nexport function useWorker() {\n  const workerRef = useRef<IWorkerClient | null>(null);\n\n  useEffect(() => {\n    const worker = createWorkerClient();\n    workerRef.current = worker;\n    return () => {\n      const wrkr = (worker as unknown) as Worker;\n      if (wrkr) {\n        delayed(1).then(async () => {\n          try {\n            await wrkr.terminate();\n          } catch (e) {}\n        });\n        workerRef.current = null;\n      }\n    };\n  }, []);\n\n  return workerRef;\n}\n","import WorkerServer from \"./server\";\nimport { IWorkerClient } from \"./worker.types\";\n\nexport function createWorkerClient(): IWorkerClient {\n  const client = new WorkerServer() as IWorkerClient;\n  return client;\n}\n","import { FC, memo } from \"react\";\nimport { useCanvas } from \"../hooks/useCanvas\";\nimport { K_Resolution } from \"./paint\";\nimport { usePaintOnWorker } from \"./usePaintOnWorker\";\n\nexport const CanvasWorker: FC<{ factor: number }> = memo((props) => {\n  const { canvasRef, ctxRef } = useCanvas();\n  usePaintOnWorker(canvasRef, ctxRef, props.factor);\n\n  return (\n    <canvas ref={canvasRef} width={K_Resolution} height={K_Resolution}></canvas>\n  );\n});\n","import { MutableRefObject, useRef } from \"react\";\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\nimport { useWorker } from \"../hooks/useWorker\";\nimport { jAnimate } from \"../shared/julia.calc\";\nimport { IJuliaOptions, IJuliaResolution } from \"../shared/julia.types\";\n\nexport function usePaintOnWorker(\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\n  factor?: number\n) {\n  const frame = useRef(0);\n  const factorRef = useRef(factor || 1);\n  factorRef.current = factor || 1;\n\n  const workerRef = useWorker();\n\n  const isCalculatingRef = useRef(false);\n  const arrayRef = useRef<Uint8ClampedArray | null>(null);\n\n  useRequestAnimationFrame(async (delta) => {\n    const worker = workerRef.current;\n    if (!worker) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = ctxRef.current;\n    if (!ctx) return;\n\n    const resolution: IJuliaResolution = {\n      width: canvas?.width || 960,\n      height: canvas?.height || 540,\n      factor: factorRef.current,\n    };\n\n    frame.current = frame.current + 1;\n    const params = jAnimate(frame.current);\n\n    const options: IJuliaOptions = { ...resolution, ...params };\n\n    if (!isCalculatingRef.current) {\n      isCalculatingRef.current = true;\n      arrayRef.current = await worker.calculate(options);\n      isCalculatingRef.current = false;\n    }\n\n    const array = arrayRef.current;\n    if (array) {\n      const img = new ImageData(array, resolution.width, resolution.height);\n      ctx.putImageData(img, 0, 0);\n    }\n\n    document.title = `${(1000 / delta).toFixed(2)} FPS`;\n\n    return Promise.resolve();\n  });\n}\n","import { FC, memo, useState } from \"react\";\nimport { formatedTime, useInterval } from \"../hooks/useTime\";\n\nexport const Clock: FC<{}> = memo(() => {\n  const [count, setCount] = useState(0);\n\n  useInterval(1, () => {\n    setCount((c) => c + 1);\n  });\n\n  return (\n    <header className=\"App-header\">\n      <p>Julia set</p>\n      <p>{count}</p>\n      <p>{formatedTime()}</p>\n    </header>\n  );\n});\n","import { FC, useEffect, useMemo, useState } from \"react\";\nimport { CanvasCircle } from \"./CanvasCircle\";\nimport { CanvasMain } from \"./CanvasMain\";\nimport { CanvasWorker } from \"./CanvasWorker\";\nimport { Clock } from \"./Clock\";\n\nexport const View: FC<{}> = () => {\n  const list = useMemo(() => Array.from(Array(10000).keys()), []);\n\n  const [code, setCode] = useState(\"main\");\n  const [factor, setFactor] = useState(1);\n  const [option, setOption] = useState(0);\n\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    //\n    fetch(\"https://unpkg.com/react@17.0.2/umd/react.development.js\")\n      .then((r) => r.text())\n      .then((t) => {\n        setText(t);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: \"relative\", margin: 8 }}>\n        {code === \"main\" && <CanvasMain factor={factor} />}\n        {code === \"worker\" && <CanvasWorker factor={factor} />}\n        <CanvasCircle />\n      </div>\n      <Clock />\n      <div>\n        <div style={{ width: 210, height: 640 }}>\n          <p>\n            <input\n              type=\"radio\"\n              key={\"main\"}\n              value={\"main\"}\n              name={`Paint on Main thread`}\n              checked={code === \"main\"}\n              onChange={() => setCode(\"main\")}\n            />\n            <span>Paint on Main thread</span>\n          </p>\n          <p>\n            <input\n              type=\"radio\"\n              key={\"worker\"}\n              value={\"worker\"}\n              name={`Paint on Worker thread`}\n              checked={code === \"worker\"}\n              onChange={() => setCode(\"worker\")}\n            />\n            <span>Paint on Worker thread</span>\n          </p>\n        </div>\n      </div>\n      <div>\n        <div style={{ width: 160, height: 640 }}>\n          <p>\n            <input\n              type=\"radio\"\n              key={4}\n              value={4}\n              name={`Divide by 4`}\n              checked={factor === 4}\n              onChange={() => setFactor(4)}\n            />\n            <span>Divide by 4</span>\n          </p>\n          <p>\n            <input\n              type=\"radio\"\n              key={2}\n              value={2}\n              name={`Divide by 2`}\n              checked={factor === 2}\n              onChange={() => setFactor(2)}\n            />\n            <span>Divide by 2</span>\n          </p>\n          <p>\n            <input\n              type=\"radio\"\n              key={1}\n              value={1}\n              name={`Divide by 1`}\n              checked={factor === 1}\n              onChange={() => setFactor(1)}\n            />\n            <span>Divide by 1</span>\n          </p>\n        </div>\n      </div>\n      <div>\n        <div style={{ overflowY: \"scroll\", width: 160, height: 640 }}>\n          {list.map((v) => {\n            return (\n              <p key={v}>\n                <input\n                  type=\"radio\"\n                  key={v}\n                  value={v}\n                  name={`Option ${v}`}\n                  checked={option === v}\n                  onChange={(e) => setOption(+e.target.value)}\n                />\n                <span>Option {v}</span>\n              </p>\n            );\n          })}\n        </div>\n      </div>\n      <div\n        style={{\n          overflowY: \"scroll\",\n          width: 400,\n          height: 640,\n        }}\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { View } from \"./views/View\";\n\nfunction App() {\n  return <View />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}