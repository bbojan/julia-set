{"version":3,"sources":["Sobel.js","worker/server/worker.server.ts","webpack:///./src/worker/server/worker.server.ts?2088","hooks/useCanvas.ts","hooks/useCircle.ts","hooks/useMouseMove.ts","views/paint.ts","hooks/useTime.ts","views/CanvasCircle.tsx","views/usePaintCircle.ts","shared/julia.calc.ts","views/CanvasMain.tsx","views/usePaintOnMain.ts","worker/server/index.ts","hooks/useWorker.ts","worker/worker.client.ts","views/CanvasWorker.tsx","views/usePaintOnWorker.ts","views/Clock.tsx","views/ExpensiveOperation.tsx","views/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["root","Sobel","imageData","this","width","height","kernelX","kernelY","sobelData","grayscaleData","bindPixelAt","data","x","y","i","pixelAt","avg","push","pixelX","pixelY","magnitude","Math","sqrt","clampedArray","Uint8ClampedArray","toImageData","FakeImageData","ImageData","Object","prototype","toString","call","window","document","canvas","createElement","getContext","createImageData","set","module","exports","inst","wrap","Worker","f","useCanvas","canvasRef","useRef","ctxRef","useEffect","current","useCircle","hitTest","xRef","yRef","capturedRef","style","cursor","onmousedown","ev","ex","offsetX","ey","offsetY","onmousemove","pageX","pageY","onmouseup","useMouseMove","useCallback","radius","K_Resolution","paintCircle","ctx","circle","beginPath","arc","PI","fillStyle","fill","fps","fractal","delta","parts","title","split","toFixed","delayed","timeout","Promise","resolve","setTimeout","useRequestAnimationFrame","animate","requestRef","previousTimeRef","callback","time","a","undefined","deltaTime","requestAnimationFrame","cancelAnimationFrame","CanvasCircle","memo","props","factor","clearRect","usePaintCircle","ref","position","top","left","bottom","jCalculateArray","options","creal","cimag","edge","floor","w","h","h4","w4","array","pallete","pallette","color","jCreateColors","j","cx","cy","xt","colors","glur","jAnimate","frame","sin","cos","CanvasMain","factorRef","edgeRef","resolution","params","values","img","putImageData","usePaintOnMain","WorkerServer","useWorker","workerRef","worker","wrkr","then","terminate","CanvasWorker","isCalculatingRef","arrayRef","calculate","usePaintOnWorker","Clock","useState","count","setCount","c","id","setInterval","clearInterval","ts","d","Date","getHours","getMinutes","getSeconds","getMilliseconds","formatedTime","className","ExpensiveOperation","status","setStatus","final","setFinal","input","expensiveOperation","value","Comlink","st","v","o","result","marginTop","fontSize","ceil","View","blurs","useMemo","Array","from","keys","list","code","setCode","setFactor","option","setOption","expensive","setExpensive","setEdge","text","setText","fetch","r","t","margin","name","type","checked","onChange","p","marginBottom","e","map","b","overflowY","useStaticSize","itemSizeGetter","length","itemRenderer","idx","target","dangerouslySetInnerHTML","__html","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.070c285b.chunk.js","sourcesContent":["(function (root) {\r\n  function Sobel(imageData) {\r\n    if (!(this instanceof Sobel)) {\r\n      return new Sobel(imageData);\r\n    }\r\n\r\n    var width = imageData.width;\r\n    var height = imageData.height;\r\n\r\n    var kernelX = [\r\n      [-1, 0, 1],\r\n      [-2, 0, 2],\r\n      [-1, 0, 1],\r\n    ];\r\n\r\n    var kernelY = [\r\n      [-1, -2, -1],\r\n      [0, 0, 0],\r\n      [1, 2, 1],\r\n    ];\r\n\r\n    var sobelData = [];\r\n    var grayscaleData = [];\r\n\r\n    function bindPixelAt(data) {\r\n      return function (x, y, i) {\r\n        i = i || 0;\r\n        return data[(width * y + x) * 4 + i];\r\n      };\r\n    }\r\n\r\n    var data = imageData.data;\r\n    var pixelAt = bindPixelAt(data);\r\n    var x, y;\r\n\r\n    for (y = 0; y < height; y++) {\r\n      for (x = 0; x < width; x++) {\r\n        var r = pixelAt(x, y, 0);\r\n        var g = pixelAt(x, y, 1);\r\n        var b = pixelAt(x, y, 2);\r\n\r\n        var avg = (r + g + b) / 3;\r\n        grayscaleData.push(avg, avg, avg, 255);\r\n      }\r\n    }\r\n\r\n    pixelAt = bindPixelAt(grayscaleData);\r\n\r\n    for (y = 0; y < height; y++) {\r\n      for (x = 0; x < width; x++) {\r\n        var pixelX =\r\n          kernelX[0][0] * pixelAt(x - 1, y - 1) +\r\n          kernelX[0][1] * pixelAt(x, y - 1) +\r\n          kernelX[0][2] * pixelAt(x + 1, y - 1) +\r\n          kernelX[1][0] * pixelAt(x - 1, y) +\r\n          kernelX[1][1] * pixelAt(x, y) +\r\n          kernelX[1][2] * pixelAt(x + 1, y) +\r\n          kernelX[2][0] * pixelAt(x - 1, y + 1) +\r\n          kernelX[2][1] * pixelAt(x, y + 1) +\r\n          kernelX[2][2] * pixelAt(x + 1, y + 1);\r\n\r\n        var pixelY =\r\n          kernelY[0][0] * pixelAt(x - 1, y - 1) +\r\n          kernelY[0][1] * pixelAt(x, y - 1) +\r\n          kernelY[0][2] * pixelAt(x + 1, y - 1) +\r\n          kernelY[1][0] * pixelAt(x - 1, y) +\r\n          kernelY[1][1] * pixelAt(x, y) +\r\n          kernelY[1][2] * pixelAt(x + 1, y) +\r\n          kernelY[2][0] * pixelAt(x - 1, y + 1) +\r\n          kernelY[2][1] * pixelAt(x, y + 1) +\r\n          kernelY[2][2] * pixelAt(x + 1, y + 1);\r\n\r\n        var magnitude = Math.sqrt(pixelX * pixelX + pixelY * pixelY) >>> 0;\r\n\r\n        sobelData.push(magnitude, magnitude, magnitude, 255);\r\n      }\r\n    }\r\n\r\n    var clampedArray = sobelData;\r\n\r\n    if (typeof Uint8ClampedArray === \"function\") {\r\n      clampedArray = new Uint8ClampedArray(sobelData);\r\n    }\r\n\r\n    clampedArray.toImageData = function () {\r\n      return Sobel.toImageData(clampedArray, width, height);\r\n    };\r\n\r\n    return clampedArray;\r\n  }\r\n\r\n  Sobel.toImageData = function toImageData(data, width, height) {\r\n    if (\r\n      typeof ImageData === \"function\" &&\r\n      Object.prototype.toString.call(data) === \"[object Uint16Array]\"\r\n    ) {\r\n      return new ImageData(data, width, height);\r\n    } else {\r\n      if (typeof window === \"object\" && typeof window.document === \"object\") {\r\n        var canvas = document.createElement(\"canvas\");\r\n\r\n        if (typeof canvas.getContext === \"function\") {\r\n          var context = canvas.getContext(\"2d\");\r\n          var imageData = context.createImageData(width, height);\r\n          imageData.data.set(data);\r\n          return imageData;\r\n        } else {\r\n          return new FakeImageData(data, width, height);\r\n        }\r\n      } else {\r\n        return new FakeImageData(data, width, height);\r\n      }\r\n    }\r\n  };\r\n\r\n  function FakeImageData(data, width, height) {\r\n    return {\r\n      width: width,\r\n      height: height,\r\n      data: data,\r\n    };\r\n  }\r\n\r\n  if (typeof exports !== \"undefined\") {\r\n    if (typeof module !== \"undefined\" && module.exports) {\r\n      exports = module.exports = Sobel;\r\n    }\r\n    exports.Sobel = Sobel;\r\n    exports.FakeImageData = FakeImageData;\r\n  }\r\n})(this);\r\n","var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!D:/Projects/react/julia-set/node_modules/comlink-loader/dist/comlink-worker-loader.js!D:\\\\Projects\\\\react\\\\julia-set\\\\node_modules\\\\react-scripts\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--5-oneOf-2!D:\\\\Projects\\\\react\\\\julia-set\\\\src\\\\worker\\\\server\\\\worker.server.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"d8c8829f7b91d45d3a22.worker.js\");\n};","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useCanvas() {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const ctxRef = useRef<CanvasRenderingContext2D | null>(null);\r\n  useEffect(() => {\r\n    if (canvasRef.current) {\r\n      ctxRef.current = canvasRef.current.getContext(\"2d\");\r\n    }\r\n  }, []);\r\n\r\n  return { canvasRef, ctxRef };\r\n}\r\n","import { MutableRefObject, useCallback } from \"react\";\r\nimport { useMouseMove } from \"./useMouseMove\";\r\n\r\nexport interface ICircle {\r\n  xRef: MutableRefObject<number>;\r\n  yRef: MutableRefObject<number>;\r\n  radius: number;\r\n}\r\n\r\nexport function useCircle(\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>\r\n): ICircle {\r\n  const radius = 40;\r\n\r\n  const { xRef, yRef } = useMouseMove(\r\n    canvasRef,\r\n    useCallback(\r\n      ({ x, y, ex, ey }) => {\r\n        const distance = Math.sqrt((x - ex) * (x - ex) + (y - ey) * (y - ey));\r\n        return distance < radius;\r\n      },\r\n      [radius]\r\n    )\r\n  );\r\n\r\n  return { xRef, yRef, radius };\r\n}\r\n","import { MutableRefObject, useEffect, useRef } from \"react\";\r\n\r\nexport function useMouseMove(\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n  hitTest: (points: { x: number; y: number; ex: number; ey: number }) => boolean\r\n) {\r\n  const xRef = useRef(50);\r\n  const yRef = useRef(50);\r\n\r\n  const capturedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n\r\n    const onmousedown = (ev: MouseEvent) => {\r\n      const x = xRef.current;\r\n      const y = yRef.current;\r\n      const ex = ev.offsetX || 0;\r\n      const ey = ev.offsetY || 0;\r\n\r\n      const hit = hitTest({ x, y, ex, ey });\r\n\r\n      if (hit) {\r\n        capturedRef.current = true;\r\n        if (canvas) {\r\n          canvas.style.cursor = \"grabbing\";\r\n        }\r\n      }\r\n    };\r\n    const onmousemove = (ev: MouseEvent) => {\r\n      if (capturedRef.current) {\r\n        xRef.current = ev.pageX;\r\n        yRef.current = ev.pageY;\r\n      }\r\n    };\r\n    const onmouseup = (ev: MouseEvent) => {\r\n      capturedRef.current = false;\r\n\r\n      if (canvas) {\r\n        canvas.style.cursor = \"grab\";\r\n      }\r\n    };\r\n\r\n    if (canvas) {\r\n      canvas.style.cursor = \"grab\";\r\n      canvas.onmousedown = onmousedown;\r\n      window.onmousemove = onmousemove;\r\n      window.onmouseup = onmouseup;\r\n    }\r\n\r\n    return () => {\r\n      if (canvas) {\r\n        canvas.onmousedown = null;\r\n        window.onmousemove = null;\r\n        window.onmouseup = null;\r\n      }\r\n    };\r\n  }, [canvasRef, hitTest]);\r\n\r\n  return { xRef, yRef };\r\n}\r\n","import { ICircle } from \"../hooks/useCircle\";\r\n\r\nexport const K_Resolution = 640;\r\n\r\nexport function paintCircle(ctx: CanvasRenderingContext2D, circle: ICircle) {\r\n  const { xRef, yRef, radius } = circle;\r\n  const x = xRef.current;\r\n  const y = yRef.current;\r\n\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n  ctx.fillStyle = \"yellow\";\r\n  ctx.fill();\r\n}\r\n\r\nexport function fps(fractal: boolean, delta: number) {\r\n  const parts = document.title.split(\",\");\r\n  if (fractal) {\r\n    const parts = document.title.split(\",\");\r\n    document.title = `${parts[0] || \"\"},  FRACTAL ${(1000 / delta).toFixed(\r\n      1\r\n    )} FPS`;\r\n  } else {\r\n    document.title = `UI ${(1000 / delta).toFixed(1)} FPS  ,${parts[1] || \"\"}`;\r\n  }\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const delayed = (timeout: number) =>\r\n  new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(timeout);\r\n    }, timeout);\r\n  });\r\n\r\nexport function useInterval(timeout: number, callback: () => void) {\r\n  useEffect(() => {\r\n    const id = setInterval(callback, timeout);\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, [callback, timeout]);\r\n}\r\n\r\nexport function useRequestAnimationFrame(\r\n  animate: (deltaTime: number, time: number) => Promise<unknown>\r\n) {\r\n  const requestRef = useRef<number>(0);\r\n  const previousTimeRef = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n    const callback: FrameRequestCallback = async (time) => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        const deltaTime = time - previousTimeRef.current;\r\n        await animate(deltaTime, time);\r\n      }\r\n      previousTimeRef.current = time;\r\n      requestRef.current = requestAnimationFrame(callback);\r\n    };\r\n\r\n    requestRef.current = requestAnimationFrame(callback);\r\n    return () => cancelAnimationFrame(requestRef.current);\r\n  }, [animate]);\r\n}\r\n\r\nexport function formatedTime() {\r\n  const d = new Date();\r\n  return [\r\n    `${d.getHours()}:${d.getMinutes()}`,\r\n    `${d.getSeconds()},${d.getMilliseconds()}`,\r\n  ];\r\n}\r\n","import { FC, memo } from \"react\";\r\nimport { useCanvas } from \"../hooks/useCanvas\";\r\nimport { useCircle } from \"../hooks/useCircle\";\r\nimport { K_Resolution } from \"./paint\";\r\nimport { usePaintCircle } from \"./usePaintCircle\";\r\n\r\nexport const CanvasCircle: FC<{}> = memo((props) => {\r\n  const { canvasRef, ctxRef } = useCanvas();\r\n  const circle = useCircle(canvasRef);\r\n\r\n  usePaintCircle(canvasRef, ctxRef, circle, 1);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={K_Resolution}\r\n      height={K_Resolution}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n      }}\r\n    ></canvas>\r\n  );\r\n});\r\n","import { MutableRefObject, useCallback, useRef } from \"react\";\r\nimport { ICircle } from \"../hooks/useCircle\";\r\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\r\nimport { fps, paintCircle } from \"./paint\";\r\n\r\nexport function usePaintCircle(\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\r\n  circle: ICircle,\r\n  factor?: number\r\n) {\r\n  const factorRef = useRef(factor || 0);\r\n  factorRef.current = factor || 0;\r\n\r\n  useRequestAnimationFrame(\r\n    useCallback(\r\n      async (delta: number) => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        const ctx = ctxRef.current;\r\n        if (!ctx) return;\r\n\r\n        // alpha\r\n        const { width, height } = canvas;\r\n        ctx.clearRect(0, 0, width, height);\r\n        // alpha\r\n\r\n        paintCircle(ctx, circle);\r\n\r\n        fps(false, delta);\r\n\r\n        return Promise.resolve();\r\n      },\r\n      [canvasRef, ctxRef, circle]\r\n    )\r\n  );\r\n}\r\n","import glur from \"glur\";\r\nimport Sobel from \"../Sobel\";\r\nimport { IJuliaOptions, IJuliaParams } from \"./julia.types\";\r\n\r\nexport function jCalculateArray(options: IJuliaOptions) {\r\n  const { height, width, creal, cimag, factor, edge } = options;\r\n  const f = Math.floor(factor || 0);\r\n\r\n  const w = width;\r\n  const h = height;\r\n  const h4 = w / 4;\r\n  const w4 = h / 4;\r\n\r\n  let array = new Uint8ClampedArray(w * h * 4);\r\n  const pallete = jCreateColors();\r\n\r\n  let j = 0;\r\n\r\n  for (let y = 0; y < h; y++) {\r\n    for (let x = 0; x < w; x++) {\r\n      let cx = -2 + x / w4;\r\n      let cy = -2 + y / h4;\r\n      let i = 0;\r\n\r\n      do {\r\n        const xt = cx * cx - cy * cy + creal;\r\n        cy = 2 * cx * cy + cimag;\r\n        cx = xt;\r\n        i++;\r\n      } while (cx * cx + cy * cy < 4 && i < 25);\r\n\r\n      const colors = pallete[i];\r\n      array[j + 0] = colors[0];\r\n      array[j + 1] = colors[1];\r\n      array[j + 2] = colors[2];\r\n      array[j + 3] = colors[3];\r\n\r\n      j += 4;\r\n    }\r\n  }\r\n\r\n  glur(array, w, h, f);\r\n\r\n  if (edge) {\r\n    const bytes = Sobel(Sobel.FakeImageData(array, w, h));\r\n    return bytes;\r\n  } else {\r\n    return array;\r\n  }\r\n}\r\n\r\nexport function jAnimate(frame: number): IJuliaParams {\r\n  const creal = -0.8 + 0.6 * Math.sin(frame / (3.14 * 20));\r\n  const cimag = 0.156 + 0.4 * Math.cos(frame / (3.14 * 40));\r\n  return { creal, cimag };\r\n}\r\n\r\nexport function jCreateColors() {\r\n  const pallette: number[][] = [];\r\n\r\n  for (\r\n    let x = 0;\r\n    x < 9;\r\n    x++ // this loop populates the color pallette array\r\n  ) {\r\n    let color = 31 * x; // convert the number to hex\r\n    pallette[x] = [color, color, 255, 255]; // \"#\" + color + color + \"ff\"; // colors 0-8: the Red and Green components change, Blue=FF\r\n    pallette[x + 8] = [0, 255, color, 255]; // \"#00ff\" + color; // colors 8-16: the Blue component changes, Red and Green=FF\r\n    pallette[17 + x] = [color, 0, 0, 255]; //  \"#\" + color + \"0000\"; // colors 17-25: the Red component changes, Green and Blue=0\r\n  }\r\n\r\n  return pallette;\r\n}\r\n","import { FC, memo } from \"react\";\r\nimport { useCanvas } from \"../hooks/useCanvas\";\r\nimport { K_Resolution } from \"./paint\";\r\nimport { usePaintOnMain } from \"./usePaintOnMain\";\r\n\r\nexport const CanvasMain: FC<{ factor: number; edge: boolean }> = memo(\r\n  (props) => {\r\n    const { canvasRef, ctxRef } = useCanvas();\r\n    usePaintOnMain(canvasRef, ctxRef, props.factor, props.edge);\r\n\r\n    return (\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={K_Resolution}\r\n        height={K_Resolution}\r\n      ></canvas>\r\n    );\r\n  }\r\n);\r\n","import { MutableRefObject, useCallback, useRef } from \"react\";\r\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\r\nimport { jAnimate, jCalculateArray } from \"../shared/julia.calc\";\r\nimport { IJuliaOptions, IJuliaResolution } from \"../shared/julia.types\";\r\nimport { fps } from \"./paint\";\r\n\r\nexport function usePaintOnMain(\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\r\n  factor?: number,\r\n  edge?: boolean\r\n) {\r\n  const frame = useRef(0);\r\n  const factorRef = useRef(factor || 0);\r\n  factorRef.current = factor || 0;\r\n  const edgeRef = useRef(edge);\r\n  edgeRef.current = edge;\r\n\r\n  useRequestAnimationFrame(\r\n    useCallback(\r\n      async (delta) => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        const ctx = ctxRef.current;\r\n        if (!ctx) return;\r\n\r\n        const { width, height } = canvas;\r\n\r\n        const resolution: IJuliaResolution = {\r\n          width: width || 960,\r\n          height: height || 540,\r\n          factor: factorRef.current,\r\n          edge: edgeRef.current,\r\n        };\r\n\r\n        frame.current = frame.current + 1;\r\n        const params = jAnimate(frame.current);\r\n\r\n        const options: IJuliaOptions = { ...resolution, ...params };\r\n        const values = jCalculateArray(options);\r\n\r\n        const img = new ImageData(values, resolution.width, resolution.height);\r\n        ctx.putImageData(img, 0, 0);\r\n\r\n        fps(true, delta);\r\n\r\n        return Promise.resolve();\r\n      },\r\n      [ctxRef, canvasRef]\r\n    )\r\n  );\r\n}\r\n","// eslint-disable-next-line\r\nimport WorkerServer from \"comlink-loader!./worker.server\"; // inline loader\r\nexport default WorkerServer;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { createWorkerClient } from \"../worker/worker.client\";\r\nimport { IWorkerClient } from \"../worker/worker.types\";\r\nimport { delayed } from \"./useTime\";\r\n\r\nexport function useWorker() {\r\n  const workerRef = useRef<IWorkerClient | null>(null);\r\n\r\n  useEffect(() => {\r\n    const worker = createWorkerClient();\r\n    workerRef.current = worker;\r\n    return () => {\r\n      const wrkr = (worker as unknown) as Worker;\r\n      if (wrkr) {\r\n        delayed(1).then(async () => {\r\n          try {\r\n            await wrkr.terminate();\r\n          } catch (e) {}\r\n        });\r\n        workerRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return workerRef;\r\n}\r\n","import WorkerServer from \"./server\";\r\nimport { IWorkerClient } from \"./worker.types\";\r\n\r\nexport function createWorkerClient(): IWorkerClient {\r\n  const client = new WorkerServer() as IWorkerClient;\r\n  return client;\r\n}\r\n","import { FC, memo } from \"react\";\r\nimport { useCanvas } from \"../hooks/useCanvas\";\r\nimport { K_Resolution } from \"./paint\";\r\nimport { usePaintOnWorker } from \"./usePaintOnWorker\";\r\n\r\nexport const CanvasWorker: FC<{ factor: number; edge: boolean }> = memo(\r\n  (props) => {\r\n    const { canvasRef, ctxRef } = useCanvas();\r\n    usePaintOnWorker(canvasRef, ctxRef, props.factor, props.edge);\r\n\r\n    return (\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={K_Resolution}\r\n        height={K_Resolution}\r\n      ></canvas>\r\n    );\r\n  }\r\n);\r\n","import { MutableRefObject, useCallback, useRef } from \"react\";\r\nimport { useRequestAnimationFrame } from \"../hooks/useTime\";\r\nimport { useWorker } from \"../hooks/useWorker\";\r\nimport { jAnimate } from \"../shared/julia.calc\";\r\nimport { IJuliaOptions, IJuliaResolution } from \"../shared/julia.types\";\r\nimport { fps } from \"./paint\";\r\n\r\nexport function usePaintOnWorker(\r\n  canvasRef: MutableRefObject<HTMLCanvasElement | null>,\r\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null>,\r\n  factor?: number,\r\n  edge?: boolean\r\n) {\r\n  const frame = useRef(0);\r\n  const factorRef = useRef(factor || 0);\r\n  factorRef.current = factor || 0;\r\n  const edgeRef = useRef(edge);\r\n  edgeRef.current = edge;\r\n\r\n  const workerRef = useWorker();\r\n\r\n  const isCalculatingRef = useRef(false);\r\n  const arrayRef = useRef<Uint8ClampedArray | null>(null);\r\n\r\n  useRequestAnimationFrame(\r\n    useCallback(\r\n      async (delta) => {\r\n        const worker = workerRef.current;\r\n        if (!worker) return;\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n        const ctx = ctxRef.current;\r\n        if (!ctx) return;\r\n\r\n        const { width, height } = canvas;\r\n\r\n        const resolution: IJuliaResolution = {\r\n          width: width || 960,\r\n          height: height || 540,\r\n          factor: factorRef.current,\r\n          edge: edgeRef.current,\r\n        };\r\n\r\n        frame.current = frame.current + 1;\r\n        const params = jAnimate(frame.current);\r\n\r\n        const options: IJuliaOptions = { ...resolution, ...params };\r\n\r\n        if (!isCalculatingRef.current) {\r\n          isCalculatingRef.current = true;\r\n          arrayRef.current = await worker.calculate(options);\r\n          isCalculatingRef.current = false;\r\n        }\r\n\r\n        const array = arrayRef.current;\r\n        if (array) {\r\n          const img = new ImageData(array, resolution.width, resolution.height);\r\n          ctx.putImageData(img, 0, 0);\r\n        }\r\n\r\n        fps(true, delta);\r\n\r\n        return Promise.resolve();\r\n      },\r\n      [ctxRef, canvasRef, workerRef]\r\n    )\r\n  );\r\n}\r\n","import { FC, memo, useState } from \"react\";\r\nimport { formatedTime, useInterval } from \"../hooks/useTime\";\r\n\r\nexport const Clock: FC<{}> = memo(() => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useInterval(1, () => {\r\n    setCount((c) => c + 1);\r\n  });\r\n\r\n  const ts = formatedTime();\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n      <p>Julia set</p>\r\n      <p>{count}</p>\r\n      <p>{ts[0]}</p>\r\n      <p>{ts[1]}</p>\r\n    </header>\r\n  );\r\n});\r\n","import * as Comlink from \"comlink\";\r\nimport { FC, memo, useEffect, useState } from \"react\";\r\nimport { delayed } from \"../hooks/useTime\";\r\nimport { useWorker } from \"../hooks/useWorker\";\r\n\r\nexport const ExpensiveOperation: FC<{}> = memo(() => {\r\n  const [status, setStatus] = useState(0);\r\n  const [final, setFinal] = useState(\"\");\r\n\r\n  const workerRef = useWorker();\r\n\r\n  const input = 5 * 1000 * 1000 * 1000;\r\n\r\n  useEffect(() => {\r\n    const worker = workerRef.current;\r\n    if (worker) {\r\n      const callback = (st: number) => setStatus(st);\r\n      const ask = (v: number) => delayed(1).then(() => v * 3);\r\n\r\n      worker\r\n        .expensiveOperation(\r\n          { value: input },\r\n          Comlink.proxy(callback),\r\n          Comlink.proxy(ask)\r\n        )\r\n        .then((o) => setFinal(o.result.toFixed()));\r\n    }\r\n  }, [input, workerRef]);\r\n\r\n  return (\r\n    <div style={{ marginTop: 16, fontSize: 16 }}>\r\n      <p>Expensive</p>\r\n      <p>Operation</p>\r\n      <p>input</p>\r\n      <p>{input}</p>\r\n      <p>done</p>\r\n      <p>{Math.ceil(status + 1).toFixed()} %</p>\r\n      <p>final result</p>\r\n      <p>{final}</p>\r\n    </div>\r\n  );\r\n});\r\n","import { FC, useEffect, useMemo, useState } from \"react\";\r\nimport ReactList from \"react-list\";\r\nimport { CanvasCircle } from \"./CanvasCircle\";\r\nimport { CanvasMain } from \"./CanvasMain\";\r\nimport { CanvasWorker } from \"./CanvasWorker\";\r\nimport { Clock } from \"./Clock\";\r\nimport { ExpensiveOperation } from \"./ExpensiveOperation\";\r\n\r\nexport const View: FC<{}> = () => {\r\n  const blurs = useMemo(() => Array.from(Array(14).keys()), []);\r\n  const list = useMemo(() => Array.from(Array(10000).keys()), []);\r\n\r\n  const [code, setCode] = useState(\"main\");\r\n  const [factor, setFactor] = useState(2);\r\n  const [option, setOption] = useState(0);\r\n  const [expensive, setExpensive] = useState(false);\r\n  const [edge, setEdge] = useState(false);\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //\r\n    fetch(\"https://unpkg.com/react@17.0.2/umd/react.development.js\")\r\n      .then((r) => r.text())\r\n      .then((t) => {\r\n        setText(t);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ position: \"relative\", margin: 8 }}>\r\n        {code === \"main\" && <CanvasMain factor={factor} edge={edge} />}\r\n        {code === \"worker\" && <CanvasWorker factor={factor} edge={edge} />}\r\n        <CanvasCircle />\r\n      </div>\r\n      <div>\r\n        <Clock />\r\n        <label>\r\n          <p>Expensive Worker</p>\r\n          <p>Operation</p>\r\n          <input\r\n            name=\"expensive\"\r\n            type=\"checkbox\"\r\n            checked={expensive}\r\n            onChange={() => setExpensive((p) => !p)}\r\n          />\r\n        </label>\r\n        {expensive && <ExpensiveOperation />}\r\n      </div>\r\n      <div style={{ width: 210 }}>\r\n        <div style={{ marginBottom: 40 }}>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              key={\"main\"}\r\n              value={\"main\"}\r\n              name={`Paint on Main thread`}\r\n              checked={code === \"main\"}\r\n              onChange={() => setCode(\"main\")}\r\n            />\r\n            <span>Paint on Main thread</span>\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              key={\"worker\"}\r\n              value={\"worker\"}\r\n              name={`Paint on Worker thread`}\r\n              checked={code === \"worker\"}\r\n              onChange={() => setCode(\"worker\")}\r\n            />\r\n            <span>Paint on Worker thread</span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <span>Edge (SLOW)</span>\r\n            <input\r\n              name=\"edge\"\r\n              type=\"checkbox\"\r\n              checked={edge}\r\n              onChange={() => setEdge((e) => !e)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {blurs.map((v, i) => {\r\n            const b = v * 2;\r\n            return (\r\n              <p key={i}>\r\n                <input\r\n                  type=\"radio\"\r\n                  key={i}\r\n                  value={b}\r\n                  name={`Blur ${b} px`}\r\n                  checked={factor === b}\r\n                  onChange={() => setFactor(b)}\r\n                />\r\n                <span>Blur {b} px</span>\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div style={{ overflowY: \"scroll\", width: 150, height: 640 }}>\r\n          <ReactList\r\n            type={\"uniform\"}\r\n            useStaticSize={true}\r\n            itemSizeGetter={() => 30}\r\n            length={list.length}\r\n            itemRenderer={(idx) => {\r\n              const v = list[idx];\r\n              return (\r\n                <p key={v}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    key={v}\r\n                    value={v}\r\n                    name={`Option ${v}`}\r\n                    checked={option === v}\r\n                    onChange={(e) => setOption(+e.target.value)}\r\n                  />\r\n                  <span>Option {v}</span>\r\n                </p>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          width: 400,\r\n          height: 640,\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: text }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { View } from \"./views/View\";\n\nfunction App() {\n  return <View />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}